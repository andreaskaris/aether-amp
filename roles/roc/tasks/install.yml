---

- name: set fs.inotify.max_user_watches to 524288
  ansible.posix.sysctl:
    name: fs.inotify.max_user_watches
    value: '524288'
    sysctl_set: true
    reload: true
  when: inventory_hostname in groups['master_nodes']
  become: true

- name: set fs.inotify.max_user_instances to 512
  ansible.posix.sysctl:
    name: fs.inotify.max_user_instances
    value: '512'
    sysctl_set: true
    reload: true
  when: inventory_hostname in groups['master_nodes']
  become: true

- name: add atomix chart repo
  kubernetes.core.helm_repository:
    name: atomix
    repo_url: "https://charts.atomix.io"
  when: inventory_hostname in groups['master_nodes']

- name: add onosproject chart repo
  kubernetes.core.helm_repository:
    name: onosproject
    repo_url: "https://charts.onosproject.org"
  when: inventory_hostname in groups['master_nodes']

- name: add aether chart repo
  kubernetes.core.helm_repository:
    name: aether
    repo_url: "https://charts.aetherproject.org"
  when: inventory_hostname in groups['master_nodes']

- name: add rancher chart repo
  kubernetes.core.helm_repository:
    name: rancher
    repo_url: "http://charts.rancher.io/"
  when: inventory_hostname in groups['master_nodes']

# TODO: add a local check to install local store
# TODO: use kubctl module for anisble
- name: Setup Local Store
  shell:
    cmd: |
      kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/{{ amp.store.lpp.version }}/deploy/local-path-storage.yaml --wait=true;
      kubectl patch storageclass local-path -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}';
  when: inventory_hostname in groups['master_nodes']

- name: remove /tmp/roc-values.yaml
  file:
    path: "/tmp/roc-values.yaml"
    state: absent
  when: inventory_hostname in groups['master_nodes']

- name: copy roc-values.yaml to /tmp/roc-values.yaml
  template:
    src: roles/roc/templates/roc-values.yaml
    dest: "/tmp/roc-values.yaml"
  when: inventory_hostname in groups['master_nodes']

- name: deploy atomix-runtime from {{ amp.atomix.helm.chart_ref }}
  kubernetes.core.helm:
    update_repo_cache: true
    name: atomix #atomix-runtime
    release_namespace: kube-system #aether-roc
    create_namespace: true
    chart_ref: "{{ amp.atomix.helm.chart_ref }}"
    chart_version: "{{ amp.atomix.helm.chart_version }}"
    values_files:
      - /tmp/roc-values.yaml
    wait: true
    force: true
  when: inventory_hostname in groups['master_nodes']

- name: deploy onos-operator from {{ amp.onosproject.helm.chart_ref }}
  kubernetes.core.helm:
    update_repo_cache: true
    name: onos-operator
    release_namespace: kube-system #aether-roc 
    create_namespace: true
    chart_ref: "{{ amp.onosproject.helm.chart_ref }}"
    chart_version: "{{ amp.onosproject.helm.chart_version }}"
    values_files:
      - /tmp/roc-values.yaml
    wait: true
    force: true
  when: inventory_hostname in groups['master_nodes']

- name: deploy aether-roc-umbrella from {{ amp.aether_roc.helm.chart_ref }}
  kubernetes.core.helm:
    update_repo_cache: true
    name: aether-roc-umbrella
    release_namespace: aether-roc
    create_namespace: true
    chart_ref: "{{ amp.aether_roc.helm.chart_ref }}"
    chart_version: "{{ amp.aether_roc.helm.chart_version }}"
    values_files:
      - /tmp/roc-values.yaml
    wait: true
    force: true
  when: inventory_hostname in groups['master_nodes']

- pause:
    seconds: 5
